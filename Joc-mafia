<!DOCTYPE html>
<html lang="ro">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Joc Mafia</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #1a1a2e;
            color: #e6e6e6;
            line-height: 1.6;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            text-align: center;
            padding: 20px 0;
            background-color: #16213e;
            margin-bottom: 30px;
            border-radius: 8px;
        }
        
        h1 {
            color: #ff5722;
            font-size: 2.5rem;
        }
        
        .screen {
            display: none;
            background-color: #16213e;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
            margin-bottom: 20px;
        }
        
        .active {
            display: block;
        }
        
        .btn {
            display: inline-block;
            background-color: #0f3460;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin: 10px 5px;
            transition: background-color 0.3s;
        }
        
        .btn:hover {
            background-color: #1a5dad;
        }
        
        .btn-primary {
            background-color: #ff5722;
        }
        
        .btn-primary:hover {
            background-color: #e64a19;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
        }
        
        input[type="text"],
        input[type="number"] {
            width: 100%;
            padding: 12px;
            border: 1px solid #0f3460;
            border-radius: 5px;
            background-color: #1a1a2e;
            color: white;
            font-size: 16px;
        }
        
        .player-list {
            list-style-type: none;
            margin: 20px 0;
        }
        
        .player-list li {
            padding: 10px;
            background-color: #1a1a2e;
            margin-bottom: 8px;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .role-config {
            margin: 15px 0;
            padding: 15px;
            background-color: #1a1a2e;
            border-radius: 5px;
        }
        
        .role-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            align-items: center;
        }
        
        .hidden {
            display: none;
        }
        
        #playerScreen {
            text-align: center;
        }
        
        .role-display {
            font-size: 24px;
            margin: 30px 0;
            padding: 20px;
            background-color: #0f3460;
            border-radius: 10px;
            display: inline-block;
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }
            
            .screen {
                padding: 15px;
            }
            
            .btn {
                width: 100%;
                margin: 5px 0;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Joc Mafia</h1>
        </header>
        
        <!-- Ecranul principal -->
        <div id="mainScreen" class="screen active">
            <h2>Bun venit!</h2>
            <p>Pentru a începe, fie creează o cameră nouă, fie alătură-te uneia existente.</p>
            <button id="createRoomBtn" class="btn btn-primary">Creează Cameră</button>
            <button id="joinRoomBtn" class="btn">Alătură-te Camerei</button>
        </div>
        
        <!-- Ecranul de creare cameră -->
        <div id="createRoomScreen" class="screen">
            <h2>Creează o Cameră Nouă</h2>
            <div class="form-group">
                <label for="hostName">Numele tău:</label>
                <input type="text" id="hostName" placeholder="Introdu numele tău">
            </div>
            <button id="createRoomConfirmBtn" class="btn btn-primary">Creează Cameră</button>
            <button id="backToMainBtn" class="btn">Înapoi</button>
        </div>
        
        <!-- Ecranul de alăturare cameră -->
        <div id="joinRoomScreen" class="screen">
            <h2>Alătură-te unei Camere</h2>
            <div class="form-group">
                <label for="playerName">Numele tău:</label>
                <input type="text" id="playerName" placeholder="Introdu numele tău">
            </div>
            <div class="form-group">
                <label for="roomCode">Codul Camerei:</label>
                <input type="text" id="roomCode" placeholder="Introdu codul camerei">
            </div>
            <button id="joinRoomConfirmBtn" class="btn btn-primary">Alătură-te</button>
            <button id="backToMainBtn2" class="btn">Înapoi</button>
        </div>
        
        <!-- Ecranul de așteptare -->
        <div id="waitingScreen" class="screen">
            <h2>Camera: <span id="displayRoomCode">-</span></h2>
            <h3>Jucători în cameră:</h3>
            <ul id="playersList" class="player-list">
                <!-- Lista jucătorilor va fi populată din JavaScript -->
            </ul>
            
            <div id="hostControls" class="hidden">
                <h3>Control Host</h3>
                
                <div class="role-config">
                    <h4>Configurează Rolurile</h4>
                    <div id="rolesContainer">
                        <!-- Rolurile vor fi adăugate din JavaScript -->
                    </div>
                    <button id="addRoleBtn" class="btn">Adaugă Rol</button>
                </div>
                
                <button id="assignRolesBtn" class="btn">Atribuie Roluri Aleatoriu</button>
                <button id="startGameBtn" class="btn btn-primary">Start Joc</button>
            </div>
            
            <div id="playerWaiting">
                <p>Așteptăm ca host-ul să înceapă jocul...</p>
            </div>
        </div>
        
        <!-- Ecranul jucătorului cu rolul atribuit -->
        <div id="playerScreen" class="screen">
            <h2>Salut, <span id="playerNameDisplay">Jucător</span>!</h2>
            <p>Rolul tău în acest joc este:</p>
            <div class="role-display" id="assignedRole">Se atribuie rolurile...</div>
            <p>Baftă!</p>
        </div>
    </div>

    <script>
        // Variabile globale
        let currentRoomCode = '';
        let isHost = false;
        let playerName = '';
        const rolesConfig = [];
        
        // Elemente DOM
        const screens = document.querySelectorAll('.screen');
        const mainScreen = document.getElementById('mainScreen');
        const createRoomScreen = document.getElementById('createRoomScreen');
        const joinRoomScreen = document.getElementById('joinRoomScreen');
        const waitingScreen = document.getElementById('waitingScreen');
        const playerScreen = document.getElementById('playerScreen');
        
        const hostNameInput = document.getElementById('hostName');
        const playerNameInput = document.getElementById('playerName');
        const roomCodeInput = document.getElementById('roomCode');
        const displayRoomCode = document.getElementById('displayRoomCode');
        const playersList = document.getElementById('playersList');
        const hostControls = document.getElementById('hostControls');
        const playerWaiting = document.getElementById('playerWaiting');
        const rolesContainer = document.getElementById('rolesContainer');
        const assignedRole = document.getElementById('assignedRole');
        const playerNameDisplay = document.getElementById('playerNameDisplay');
        
        // Butoane
        document.getElementById('createRoomBtn').addEventListener('click', () => showScreen(createRoomScreen));
        document.getElementById('joinRoomBtn').addEventListener('click', () => showScreen(joinRoomScreen));
        document.getElementById('backToMainBtn').addEventListener('click', () => showScreen(mainScreen));
        document.getElementById('backToMainBtn2').addEventListener('click', () => showScreen(mainScreen));
        
        document.getElementById('createRoomConfirmBtn').addEventListener('click', createRoom);
        document.getElementById('joinRoomConfirmBtn').addEventListener('click', joinRoom);
        document.getElementById('addRoleBtn').addEventListener('click', addRoleRow);
        document.getElementById('assignRolesBtn').addEventListener('click', assignRoles);
        document.getElementById('startGameBtn').addEventListener('click', startGame);
        
        // Funcții
        function showScreen(screen) {
            screens.forEach(s => s.classList.remove('active'));
            screen.classList.add('active');
        }
        
        function generateRoomCode() {
            return Math.floor(1000 + Math.random() * 9000).toString();
        }
        
        function createRoom() {
            const name = hostNameInput.value.trim();
            if (!name) {
                alert('Introdu un nume!');
                return;
            }
            
            playerName = name;
            isHost = true;
            currentRoomCode = generateRoomCode();
            
            // Simulăm crearea camerei
            displayRoomCode.textContent = currentRoomCode;
            updatePlayersList([name]);
            
            // Arată controalele de host
            hostControls.classList.remove('hidden');
            playerWaiting.classList.add('hidden');
            
            // Adaugă câteva roluri implicite
            addRoleRow('Mafiot', 2);
            addRoleRow('Polițist', 1);
            addRoleRow('Doctor', 1);
            addRoleRow('Civil', 4);
            
            showScreen(waitingScreen);
        }
        
        function joinRoom() {
            const name = playerNameInput.value.trim();
            const code = roomCodeInput.value.trim();
            
            if (!name) {
                alert('Introdu un nume!');
                return;
            }
            
            if (!code) {
                alert('Introdu codul camerei!');
                return;
            }
            
            playerName = name;
            currentRoomCode = code;
            isHost = false;
            
            // Simulăm alăturarea la cameră
            displayRoomCode.textContent = currentRoomCode;
            
            // Simulăm lista de jucători (într-o implementare reală, aceasta ar veni de la server)
            const mockPlayers = ['Host', 'Jucător1', 'Jucător2', name];
            updatePlayersList(mockPlayers);
            
            // Ascunde controalele de host
            hostControls.classList.add('hidden');
            playerWaiting.classList.remove('hidden');
            
            showScreen(waitingScreen);
        }
        
        function updatePlayersList(players) {
            playersList.innerHTML = '';
            players.forEach(player => {
                const li = document.createElement('li');
                li.textContent = player;
                if (player === playerName) {
                    li.innerHTML += ' <strong>(Tu)</strong>';
                }
                playersList.appendChild(li);
            });
        }
        
        function addRoleRow(roleName = '', count = 1) {
            const roleDiv = document.createElement('div');
            roleDiv.className = 'role-item';
            
            roleDiv.innerHTML = `
                <input type="text" placeholder="Nume rol" value="${roleName}" class="role-name">
                <div>
                    <label>Număr: </label>
                    <input type="number" value="${count}" min="1" class="role-count" style="width: 60px;">
                </div>
            `;
            
            rolesContainer.appendChild(roleDiv);
        }
        
        function assignRoles() {
            // Collect roles configuration
            rolesConfig.length = 0;
            const roleItems = rolesContainer.querySelectorAll('.role-item');
            
            roleItems.forEach(item => {
                const name = item.querySelector('.role-name').value.trim();
                const count = parseInt(item.querySelector('.role-count').value);
                
                if (name && count > 0) {
                    rolesConfig.push({ name, count });
                }
            });
            
            alert('Rolurile au fost configurate! Apasă "Start Joc" pentru a distribui rolurile.');
        }
        
        function startGame() {
            if (rolesConfig.length === 0) {
                alert('Configurează mai întâi rolurile!');
                return;
            }
            
            // Simulăm atribuirea de roluri
            // Într-o implementare reală, acest lucru s-ar face pe server
            const mockRoles = [];
            rolesConfig.forEach(role => {
                for (let i = 0; i < role.count; i++) {
                    mockRoles.push(role.name);
                }
            });
            
            // Amestecă rolurile
            for (let i = mockRoles.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [mockRoles[i], mockRoles[j]] = [mockRoles[j], mockRoles[i]];
            }
            
            // Simulăm primirea unui rol (în mod aleatoriu)
            const randomRole = mockRoles[Math.floor(Math.random() * mockRoles.length)];
            
            // Actualizăm ecranul jucătorului
            playerNameDisplay.textContent = playerName;
            assignedRole.textContent = randomRole;
            
            showScreen(playerScreen);
        }
        
        // Inițializare
        addRoleRow();
    </script>
</body>
</html>
